---
title: Simulating SDEs for Option Pricing
author: John Robin Inston
date: "2025-04-11"
categories: [Stochastic Differential Equations, Computational Finance]
toc: true
draft: true
date-modified: "2025-04-25"
title-block-banner: true
---

> This note is based on material covered by Prof. Michael Ludkovski in his class on Computational Statistics held in Spring 2025 at UC Santa Barbara, which is sourced largely from the textbook **An introduction to the numerical simulation of stochastic differential equations** by Desmond J. Higham, Peter E. Kloeden.

```{r libraries}
#| message: false
#| echo: false

## Libraries
library(tidyverse)
```

## Motivation

Often SDEs (much like PDEs) are not solvable analytically leading us to turn to numerical methods to find solutions.  This raises the question of how can we efficiently simulate these processes and how can we measure the accuracy of our approximations?  

For a practical example we look at pricing 3 options:

1. **A European call option** - where the option pays when the terminal value of the option is above some prespecified strike price;

2. **An Asian put option** - where the option pays the difference the average value over the underlying asset; and

3. **A corridor option** - that pays a predetermined amount if the underlying asset remains within some price corridor (e.g. over 10 and under 20).



We will take our underlying asset to be a stock whose price process $(S_t)$ has dynamics given by the Black-Scholes-Merton model
$$
dS_t = \mu S_t dt + \sigma S_t dW_t
$$

where $\mu,\sigma\in\mathbb{R}$ and $(W_t)$ is a standard Wiener process under the risk-free measure $\mathbb{Q}$.  This is known as the Black-Scholes-Merton model and the details of this model along with the derivation of the Black-Scholes equation can be found in our note here.  Using the substitution $Y_t = \log(X_t)$ and applying Itô's formula we obtain the solution
$$
S_{t}=S_{0}e^{(\mu-\frac{\sigma^2}{2})t+\sigma W_{t}},\tag{2}
$$

and so under the BS model we are able to obtain true probabilistic simulations of the stock price at any time $t$ given any initial time $s<t$ since the solution is deterministic up to the Wiener process increment which is normally distributed
$$
W_t - W_s \sim \mathcal{N}(0, t-s).
$$

Consider a stock with drift $\mu = 0.04$, diffusion $\sigma=0.25$, initial price $\$120$ and expiration $T=10$.  We simulate the price of the stock at time $T$ using $(2)$ as follows:

```{r bsm_true}
## Define price function
bsm_true <- function(mu, sigma, s0, t0, t1) {
    s1 <- s0 * exp((mu - sigma^2/2)*(t1-t0) + sigma*sqrt(t1-t0)*rnorm(1))
    return(s1)
}
## Generate 100000 realizations
ST <- replicate(
    100000, 
    bsm_true(
        mu = 0.05,
        sigma = 0.2,
        s0 = 49,
        t0 = 0,
        t1 = 20/52
    )
)
```

We can look at the empirical distribution of our generated terminal price sample using a histogram:

```{r stock_price}
#| fig-width: 12
#| fig-height: 5
#| message: true
#| fig-cap: "Empirical distribution of true simulated stock prices given by the BS model."

## Produce histogram
data.frame(
    Number = 1:length(ST),
    Terminal_Price = ST
 ) |>
    ggplot(aes(x = ST)) +
    geom_histogram(binwidth = 1) +
    theme_light()
```

A European call option is a financial derivative giving an individual has the option but not the obligation to purchase stock at some prespecified future expiration date at a preset strike price $K$.  The payoff of the option is given by
$$
g(S_T) = (S_T - K)_+ = \max(S_T - K, 0),
$$

where the option makes money for the holder only if the stock price at expiration is higher than the strike price $K$.  The price of the option is given by the expected value of this random variable $g(S_T)$ 
$$
\mathbb{E}[g(S_T)]=\mathbb{E}[(S_T - K)_+].
$$

Say in our case we wanted to price an option with strike price $K=50$.  Using our previous simulation we can simply compute:
```{r eurocall_price}
## Euro Call Option Price
exp(-0.05*(20/52))*mean( pmax(ST - 50, 0))
```




## Euler–Maruyama Method




