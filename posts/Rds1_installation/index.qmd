---
title: Installing and using R and RStudio
author: John Robin Inston
date: "2025-03-08"
categories: [Data Science with R]
toc: true
---

This post contains notes for Chapter 1 of my course series [Data Science with R](/courses/intro_to_data_science/index.qmd) covering how to install both the language R and the IDE RStudio, and the basics of using the IDE for data analysis.

## Background Information

`R` is a programming language (like python or C++) whilst **RStudio** is a software that facilitates writing R scripts known as an [Intergrated Development Enviroment (IDE)](https://en.wikipedia.org/wiki/Integrated_development_environment).  In this course we will learn how to write in the `R` language using the IDE RStudio.

`R` can be used to perform and automate computations, generate plots, simulate from random variables and perform statistical analysis.  RStudio is primarily an R focussed IDE but it also has the capability of producing technical documents in a variety of formats using Quarto markdown.  This is something I discuss in my post [insert post].

## Installation

`R` is not natively loaded on your computer and so to begin with we need to install both the language and the IDE onto our computers, the downloads for which can be found on the [posit website](https://posit.co/download/rstudio-desktop/).  You will need to check that you download versions of both R and RStudio that match your operating system.

![Posit website R and RStudio download screen.](posit_download.png)

R will be loaded onto your local drive and can mostly be forgotten about.  RStudio will be downloaded into your applications folder and once the download is complete you can open the application to get started.

## RStudio Layout

When you first open RStudio the application will be split into several sections called **panes**, each with a selection of **tabs**. 

![RStudio Layout.](rstudio_layout.png)

We will first go through the most important tabs and what they are used for:

1. **Left Pane:**

    a. *Console Tab* - Where R code can be read and executed by your computer.

    b. *Terminal Tab* - Providing command line access to the computer's operating system (this is rarely used by beginners).

2. **Upper Right Pane:**

    a. *Environment Tab* - A breakdown of items saved in the working memory.

3. **Lower Right Pane:**

    a. *Files Tab* - A view of your system files.

    b. *Plots Tab* - A space displaying any plot you generate.

    c. *Packages Tab* - A manager to load functions defined by other users known as **packages**.

    d. *Help Tab* - A space to search for and view code documentation.

## System vs Working Memory

Anytime you define something in R (discussed in a later chapter) it will be saved to RStudios **working (short-term) memory**, shown in the environment tab.  The available memory is limited and it is important to remember that anything stored here will be deleted once you close RStudio.

For long term storage you will need to save objects to your **system memory** (your computers filing system), shown in the files tab.  You will then be able to load anything you have saved for later use.  In this course we will typically only use our system memory for saving our R scripts (text documents in which we write our code), accessing data files or for generating and saving .pdf documents.  

RStudios **working environment** is the file on your system that RStudio is currently looking within (i.e. what it can pull files from and save files too).  The default working directory location is the file that is shown within the files tab.  You can set a new working directory at anytime by either:

1. Navigating to the desired folder in the files tab, clicking on the more settings cog and selecting Set as Working Directory.

2. Typing `setwd("desired_file_path")` into the R console.

In the image below you can see that I have created a folder titled `Data Science with R` in my system `Documents` folder and set this as my working directory.

![Set working directory,](working_directory.png)

::: {.callout-tip}

## Exercise 1

Lets prepare to create our first R script.  First navigate to your desired course folder (or create on) and set it as your working directory.
:::

## Creating R Scripts

Now we are ready to create our first R script by using any of the following methods:

1. Navigate to file > New File > R Script;

2. Use the shortcut shift + cmd + N on mac;

3. Click the small + button at the top left of the application window and select R Script.

![Creating a new R Script.](new_script.png)

After this a new pane will appear in the top left position showing an unititled document with the suffix `.R`.  We can save this file using either:

1. The shortcut CMD + S;

2. Clicking File > Save,

and the document should then appear in our working directory, therefore in our system storage.

![Saved script appearing in our working directory.](saved_script.png)

::: {.callout-tip}

## Exercise 2

Create and save your first R script (choose whatever name you like) to your working directory.
:::

## Review

At the end of this short lesson we should now be able to:

1. Download and install both R and RStudio.

2. Set our working directory.

3. Create new R scripts and save them.

<div style="display: flex; justify-content: space-between; padding: 20px 0;">
  <!-- Back Button -->
  <a href="/courses/intro_to_data_science/index.qmd" style="text-decoration: none; font-size: 18px;">
    &#8592; Course Homepage
  </a>
  
  <!-- Forward Button -->
  <a href="/posts/Rds2_rbasics/index.qmd" style="text-decoration: none; font-size: 18px;">
    Next Chapter &#8594;
  </a>
</div>